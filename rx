module uart_rx

#(
    parameter   UART_BPS    =   'd9600,         //涓插彛娉㈢壒鐜?
    parameter   CLK_FREQ    =   'd50_000_000    //鏃堕挓棰戠巼
) 
(
    input   wire        sys_clk     ,
    input   wire        sys_rst_n   ,
    input   wire        rx          ,       //涓插彛鎺ユ敹鏁版嵁

    output  reg [7:0]   po_data     ,       //涓茶浆骞跺悗鐨?8bit鏁版嵁
    output  reg         po_flag             //涓茶浆骞跺悗鐨勬暟鎹湁鏁堟爣蹇?
);

localparam BAUD_CNT_MAX = CLK_FREQ/UART_BPS;

reg             rx_reg1     ;   
reg             rx_reg2     ;   
reg             rx_reg3     ; 
  
reg             start_nedge ;   
reg             work_en     ;   
reg     [12:0]  baud_cnt    ;   
reg             bit_flag    ;   
reg     [3:0]   bit_cnt     ;   
reg     [7:0]   rx_data     ;   
reg             rx_flag     ;   

//鎻掑叆涓ょ骇瀵勫瓨鍣ㄨ繘琛屾暟鎹悓姝ワ紝鐢ㄦ潵娑堥櫎浜氱ǔ鎬?
//rx_reg1:绗竴绾у瘎瀛樺櫒锛屽瘎瀛樺櫒绌洪棽鐘舵?佸浣嶄负1
always @(posedge sys_clk ,negedge sys_rst_n) 
begin
    if(~sys_rst_n)
        rx_reg1 <= 1'b1;
    else
        rx_reg1 <= rx;
end

//rx_reg2:绗簩绾у瘎瀛樺櫒锛屽瘎瀛樺櫒绌洪棽鐘舵?佸浣嶄负1
always @(posedge sys_clk ,negedge sys_rst_n) 
begin
    if(~sys_rst_n)
        rx_reg2 <= 1'b1;
    else
        rx_reg2 <= rx_reg1;
end

//rx_reg3:绗笁绾у瘎瀛樺櫒鍜岀浜岀骇瀵勫瓨鍣ㄥ叡鍚屾瀯鎴愪笅闄嶆部妫?娴?
always @(posedge sys_clk ,negedge sys_rst_n) 
begin
    if(~sys_rst_n)
        rx_reg3 <= 1'b1;
    else
        rx_reg3 <= rx_reg2;
end

//start_nedge:妫?娴嬪埌涓嬮檷娌挎椂 start_nedge 浜х敓涓?涓椂閽熺殑楂樼數骞?
always @(posedge sys_clk ,negedge sys_rst_n) 
begin
    if(~sys_rst_n)
        start_nedge <= 1'b0;
    else if((~rx_reg2) && (rx_reg3))
        start_nedge <= 1'b1;
    else
        start_nedge <= 1'b0;
end

//work_en:鎺ユ敹鏁版嵁宸ヤ綔浣胯兘淇″彿
always @(posedge sys_clk ,negedge sys_rst_n) 
begin
    if(~sys_rst_n)
        work_en <= 1'b0;
    else if(start_nedge == 1'b1)
        work_en <= 1'b1;
    else if((bit_cnt == 4'd8) && (bit_flag == 1'b1))
        work_en <= 1'b0;
end

//baud_cnt:娉㈢壒鐜囪鏁板櫒璁℃暟锛屼粠 0 璁℃暟鍒? 5207
always @(posedge sys_clk ,negedge sys_rst_n) 
begin
    if(~sys_rst_n)
        baud_cnt <= 13'd0;
    else if((baud_cnt == BAUD_CNT_MAX -1) || (work_en == 1'b0))
        baud_cnt <= 13'd0;
    else if(work_en == 1'b1)
        baud_cnt <= baud_cnt + 13'd1;
end

//bit_flag:褰? baud_cnt 璁℃暟鍣ㄨ鏁板埌涓棿鏁版椂閲囨牱鐨勬暟鎹渶绋冲畾锛?
//姝ゆ椂鎷夐珮涓?涓爣蹇椾俊鍙疯〃绀烘暟鎹彲浠ヨ鍙栬蛋
always @(posedge sys_clk ,negedge sys_rst_n) 
begin
    if(~sys_rst_n)
        bit_flag <= 1'b0;
    else if(baud_cnt == BAUD_CNT_MAX/2 - 1)
        bit_flag <= 1'b1;
    else
        bit_flag <= 1'b0;
end

//bit_cnt:鏈夋晥鏁版嵁涓暟璁℃暟鍣紝褰? 8 涓湁鏁堟暟鎹紙涓嶅惈璧峰浣嶅拰鍋滄浣嶏級
//閮芥帴鏀跺畬鎴愬悗璁℃暟鍣ㄦ竻闆?
always @(posedge sys_clk ,negedge sys_rst_n) 
begin
    if(~sys_rst_n)
        bit_cnt <= 4'd0;
    else if((bit_cnt == 4'd8) && (bit_flag == 1'b1))
        bit_cnt <= 4'd0;
    else if(bit_flag == 1'b1)
        bit_cnt <= bit_cnt + 1'b1;
end

//rx_data:杈撳叆鏁版嵁杩涜绉讳綅
always @(posedge sys_clk ,negedge sys_rst_n) 
begin
    if(~sys_rst_n) 
        rx_data <= 8'd0;
    else if((bit_cnt >= 4'd1) && (bit_cnt <= 4'd8) && (bit_flag == 1'b1))
        rx_data <= {rx_reg3,rx_data[7:1]};
end

//rx_flag:杈撳叆鏁版嵁绉讳綅瀹屾垚鏃? rx_flag 鎷夐珮涓?涓椂閽熺殑楂樼數骞?
always @(posedge sys_clk ,negedge sys_rst_n) 
begin
    if(~sys_rst_n) 
        rx_flag <= 1'b0;
    else if((bit_cnt == 4'd8) && (bit_flag == 1'b1))
        rx_flag <= 1'b1;
    else
        rx_flag <= 1'b0;
end

//po_data:杈撳嚭瀹屾暣鐨? 8 浣嶆湁鏁堟暟鎹?
always @(posedge sys_clk ,negedge sys_rst_n) 
begin
    if(~sys_rst_n) 
        po_data <= 8'd0;
    else if(rx_flag == 1'b1)
        po_data <= rx_data;
end

//po_flag:杈撳嚭鏁版嵁鏈夋晥鏍囧織锛堟瘮 rx_flag 寤跺悗涓?涓椂閽熷懆鏈燂紝涓轰簡鍜? po_data 鍚屾锛?
always @(posedge sys_clk ,negedge sys_rst_n) 
begin
    if(~sys_rst_n)
        po_flag <= 1'b0;
    else 
        po_flag <= rx_flag;
end

endmodule
